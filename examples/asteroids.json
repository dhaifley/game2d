{
  "debug": null,
  "pause": null,
  "public": false,
  "w": 640,
  "h": 480,
  "id": "1e1cb8f5-c7dc-4a62-9b46-d18f4ac10401",
  "previous_id": "940a716e-253a-47f4-bba4-a2da9a7b7bda",
  "name": "Asteroids",
  "version": null,
  "description": "Classic Asteroids game. Use LEFT/RIGHT arrow keys to rotate your ship. UP/DOWN arrows for thrust. Press SPACE to shoot. Destroy all the asteroids before they hit you! You have 3 lives.",
  "icon": "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA2NCA2NCIgd2lkdGg9IjY0IiBoZWlnaHQ9IjY0Ij4KICA8cmVjdCB3aWR0aD0iNjQiIGhlaWdodD0iNjQiIGZpbGw9IiMwMDAwMzMiIHJ4PSI4IiByeT0iOCIvPgogIDxwYXRoIGZpbGw9IiM4ODg4ODgiIHN0cm9rZT0iIzU1NTU1NSIgc3Ryb2tlLXdpZHRoPSIyIiBkPSJNIDQwLDE1IEwgMjUsMjAgTCAyMCwzNSBMIDMwLDQ1IEwgNDUsNDAgTCA1MCwyNSBMIDQ1LDE1IFoiIC8+CiAgPHBhdGggZmlsbD0iI2ZmZmZmZiIgc3Ryb2tlPSIjMDBmZmZmIiBkPSJNIDIwLDM1IEwgMTUsNDUgTCAyNSw0NSBaIiAvPgo8L3N2Zz4=",
  "status": "active",
  "status_data": null,
  "subject": {
    "h": 30,
    "hidden": false,
    "id": "player",
    "image": "player_ship",
    "name": "Player Ship",
    "r": 0,
    "w": 30,
    "x": 305,
    "y": 225,
    "z": 1
  },
  "objects": {
    "background": {
      "h": 480,
      "hidden": false,
      "id": "background",
      "image": "background",
      "name": "Background",
      "r": 0,
      "w": 640,
      "x": 0,
      "y": 0,
      "z": 0
    }
  },
  "images": {
    "asteroid_large": {
      "data": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+Cjxzdmcgd2lkdGg9IjYwIiBoZWlnaHQ9IjYwIiB2aWV3Qm94PSIwIDAgNjAgNjAiIHZlcnNpb249IjEuMSI+CiAgPHBhdGggc3R5bGU9ImZpbGw6Izg4ODg4ODtzdHJva2U6IzU1NTU1NTtzdHJva2Utd2lkdGg6MyIgZD0iTSAzMCw1IEwgMTAsMTUgTCA1LDM1IEwgMjAsNTUgTCA0NSw1MCBMIDU1LDI1IEwgNDUsMTAgWiIgLz4KPC9zdmc+",
      "h": 0,
      "id": "asteroid_large",
      "name": "asteroid_large.svg",
      "w": 0
    },
    "asteroid_medium": {
      "data": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+Cjxzdmcgd2lkdGg9IjQwIiBoZWlnaHQ9IjQwIiB2aWV3Qm94PSIwIDAgNDAgNDAiIHZlcnNpb249IjEuMSI+CiAgPHBhdGggc3R5bGU9ImZpbGw6Izg4ODg4ODtzdHJva2U6IzU1NTU1NTtzdHJva2Utd2lkdGg6MiIgZD0iTSAyMCw1IEwgNywxMiBMIDUsMjUgTCAxNSwzNSBMIDMyLDMyIEwgMzUsMTUgTCAzMCw4IFoiIC8+Cjwvc3ZnPg==",
      "h": 0,
      "id": "asteroid_medium",
      "name": "asteroid_medium.svg",
      "w": 0
    },
    "asteroid_small": {
      "data": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+Cjxzdmcgd2lkdGg9IjIwIiBoZWlnaHQ9IjIwIiB2aWV3Qm94PSIwIDAgMjAgMjAiIHZlcnNpb249IjEuMSI+CiAgPHBhdGggc3R5bGU9ImZpbGw6Izg4ODg4ODtzdHJva2U6IzU1NTU1NTtzdHJva2Utd2lkdGg6MSIgZD0iTSAxMCwyIEwgMyw2IEwgMiwxMiBMIDcsMTcgTCAxNiwxNiBMIDE4LDggTCAxNSw0IFoiIC8+Cjwvc3ZnPg==",
      "h": 0,
      "id": "asteroid_small",
      "name": "asteroid_small.svg",
      "w": 0
    },
    "background": {
      "data": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+Cjxzdmcgd2lkdGg9IjY0MCIgaGVpZ2h0PSI0ODAiIHZpZXdCb3g9IjAgMCA2NDAgNDgwIiB2ZXJzaW9uPSIxLjEiPgogIDxyZWN0IHN0eWxlPSJmaWxsOiMwMDAwMDA7c3Ryb2tlOm5vbmUiIHdpZHRoPSI2NDAiIGhlaWdodD0iNDgwIiB4PSIwIiB5PSIwIiAvPgo8L3N2Zz4=",
      "h": 0,
      "id": "background",
      "name": "background.svg",
      "w": 0
    },
    "bullet": {
      "data": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+Cjxzdmcgd2lkdGg9IjQiIGhlaWdodD0iNCIgdmlld0JveD0iMCAwIDQgNCIgdmVyc2lvbj0iMS4xIj4KICA8cmVjdCBzdHlsZT0iZmlsbDojZmZmZmZmO3N0cm9rZTpub25lIiB3aWR0aD0iNCIgaGVpZ2h0PSI0IiB4PSIwIiB5PSIwIiAvPgo8L3N2Zz4=",
      "h": 0,
      "id": "bullet",
      "name": "bullet.svg",
      "w": 0
    },
    "player_ship": {
      "data": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+Cjxzdmcgd2lkdGg9IjMwIiBoZWlnaHQ9IjMwIiB2aWV3Qm94PSIwIDAgMzAgMzAiIHZlcnNpb249IjEuMSI+CiAgPHBhdGggc3R5bGU9ImZpbGw6I2ZmZmZmZjtzdHJva2U6IzAwZmZmZjtzdHJva2Utd2lkdGg6MiIgZD0iTSAxNSwyIEwgMiwyOCBMIDI4LDI4IFoiIC8+Cjwvc3ZnPg==",
      "h": 0,
      "id": "player_ship",
      "name": "player_ship.svg",
      "w": 0
    }
  },
  "script": "",
  "source": "app",
  "tags": null,
  "created_at": 1743227599,
  "created_by": "admin",
  "updated_at": 1743228188,
  "updated_by": "admin"
}
